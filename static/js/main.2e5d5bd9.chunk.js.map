{"version":3,"sources":["components/costomSider/index.tsx","components/lib.tsx","utils/index.ts","pages/home/cardInfo/index.tsx","pages/home/addConfirmTrend/index.tsx","pages/home/chinaMap/index.tsx","utils/http.ts","pages/home/localCases/index.tsx","pages/home/chinaTrend/index.tsx","pages/home/index.tsx","layout/main/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CostomSider","collapsed","navigate","useNavigate","Logo","className","MenuStyle","mode","defaultSelectedKeys","MenuItemStyle","onClick","icon","FundOutlined","styled","div","Menu","Item","Row","props","between","undefined","marginBottom","gap","ScreenContainer","marginTop","legendData","Button","textStyle","color","healConfig","itemStyle","borderWidth","borderType","lineStyle","deadConfig","suspectConfig","confirmConfig","nowConfirmConfig","totalConfirmConfig","useCharAt","param","substr","toString","CardInfo","date","chinaAdd","chinaTotal","time","Date","getFullYear","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","href","xs","sm","md","lg","xl","xxl","style","background","PreStyle","localConfirmadd","NumStyle","localConfirm","nowConfirm","confirm","infect","noInfect","importedCase","dead","p","AddConfirmTrend","chartInstance","localConfirmAdd","useState","isAdd","setIsAdd","initChart","trg","echarts","document","getElementById","option","title","text","tooltip","trigger","align","legend","data","name","grid","left","right","bottom","toolbox","feature","saveAsImage","xAxis","type","boundaryGap","map","item","replace","yAxis","series","setOption","useEffect","dispose","RadioGroupStyle","buttonStyle","value","onChange","e","target","RadioButtonStyle","id","width","height","Radio","Group","ChinaMap","isNow","setIsNow","require","confirmRef","useRef","chinaMapRef","nowData","useContext","NowContext","totalData","TotalContext","getCityList","a","fetch","result","json","console","log","listData","areaTree","children","total","current","myChart","formatter","label","show","fontStyle","zoom","roam","borderColor","emphasis","fontSize","areaColor","visualMap","pieces","min","max","inRange","ref","httpGet","url","LocalCases","dataSource","setDataSource","getGradeCityDetailList","statisGradeCityDetail","index","key","handleDetail","rowData","province","city","method","headers","response","columns","dataIndex","render","TagStyle","marginLeft","sort","b","confirmAdd","Tag","ChinaTrend","nowTrend","addTrend","totalTrend","natality","trendType","setTrendType","suspect","heal","healRate","deadRate","createContext","Home","setChinaAdd","setChinaTotal","setNowData","setTotalData","setLocalConfirmAdd","setLocalConfirm","setNowTrend","setAddTrend","setTotalTrend","setNatality","getList","getOnsInfo","chinaDayAddList","length","chinaDayList","slice","totalList","Provider","Header","Layout","Sider","Content","Footer","Main","setCollapsed","siderRef","location","useLocation","SiderStyle","collapsible","backgroundColor","HeaderStyle","SpanStyle","MenuUnfoldOutlined","MenuFoldOutlined","paddingLeft","padding","minHeight","pathname","path","element","textAlign","span","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"+kxjBAmCeA,EApBsB,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAEjCC,EAAWC,cAKT,OACI,qCAEQF,EAAY,cAACG,EAAD,CAAMC,UAAU,OAAhB,kBAAqC,cAACD,EAAD,CAAMC,UAAU,OAAhB,sBAErD,cAACC,EAAD,CAAWC,KAAK,SAASC,oBAAqB,CAAC,KAA/C,SACI,cAACC,EAAD,CAAuBC,QAAS,WARhDR,EAQ0D,eAAeS,KAAM,cAACC,EAAA,EAAD,IAA/D,qCAAmB,WASjCR,EAAOS,IAAOC,IAAV,wJAOJR,EAAYO,YAAOE,IAAPF,CAAH,oEAITJ,EAAgBI,YAAOE,IAAKC,KAAZH,CAAH,4F,6FCpCNI,EAAMJ,IAAOC,IAAV,6NAGI,SAAAI,GAAK,OAAIA,EAAMC,QAAU,qBAAkBC,KAC7C,SAAAF,GAAK,OAAIA,EAAMG,aAAe,SAI9B,SAAAH,GAAK,MAAyB,kBAAdA,EAAMI,IAAmBJ,EAAMI,IAAM,MAAQJ,EAAMI,IAAM,YAASF,KAIvFG,EAAkBV,IAAOC,IAAV,gMAKb,SAAAI,GAAK,OAAIA,EAAMM,UAAY,SAE1B,SAAAN,GAAK,MAAyB,kBAAdA,EAAMI,IAAmBJ,EAAMI,IAAM,MAAQJ,EAAMI,IAAM,YAASF,KAC/E,SAAAF,GAAK,MAAyB,kBAAdA,EAAMI,IAAmBJ,EAAMI,IAAM,MAAQJ,EAAMI,IAAM,YAASF,KAmCxFK,GAvBIZ,IAAOC,IAAV,oHAmBiBD,YAAOa,IAAPb,CAAH,2CAIF,CAACF,KAAM,OAAQgB,UAAW,CAAEC,MAAO,UAEhDC,EAAa,CAACC,UAAW,CAACF,MAAM,UAAWG,YAAa,EAAGC,WAAY,SAASC,UAAW,CAACL,MAAM,YAElGM,EAAa,CAACJ,UAAW,CAACF,MAAM,UAAaG,YAAa,EAAGC,WAAY,SAASC,UAAW,CAACL,MAAM,YAEpGO,EAAgB,CAACL,UAAW,CAACF,MAAM,UAAaG,YAAa,EAAGC,WAAY,SAASC,UAAW,CAACL,MAAM,YAEvGQ,EAAgB,CAACN,UAAW,CAACF,MAAM,UAAaG,YAAa,EAAGC,WAAY,SAASC,UAAW,CAACL,MAAM,YAEvGS,EAAmB,CAACP,UAAW,CAACF,MAAM,UAAaG,YAAa,EAAGC,WAAY,SAASC,UAAW,CAACL,MAAM,YAE1GU,EAAqB,CAACR,UAAW,CAACF,MAAM,UAAaG,YAAa,EAAGC,WAAY,SAASC,UAAW,CAACL,MAAM,Y,iBCqD5GW,EAAY,SAACC,GACzB,MAAmB,iBAATA,EACFA,EAAMC,OAAO,EAAE,GACE,iBAATD,GACfA,EAAQA,EAAME,YACDD,OAAO,EAAE,QAFjB,GCrBQE,GAtGoB,SAAC,GAA4B,ID+KvCC,EC/KYC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,WAEvCC,EAAO,IAAIC,KAEf,OACI,qCACI,eAAC/B,EAAD,CAAKI,aAAc,EAAGC,IAAK,EAA3B,UACI,eAAC,IAAD,4BDwKSsB,ECxKSG,EDyKzBH,GAGLA,EAAO,IAAII,KAAKJ,GACV,GAAN,OAAUA,EAAKK,cAAf,aAAiCL,EAAKM,WAAa,GAAGR,WAAWS,SAAS,EAAG,KAA7E,YAAqFP,EAChFQ,UACAV,WACAS,SAAS,EAAG,KAHjB,YAGyBP,EAAKS,WAAWX,WAAWS,SAAS,EAAG,KAHhE,YAGwEP,EAAKU,aAAaZ,WACrFS,SAAS,EAAG,KAJjB,YAIyBP,EAAKW,aAAab,WAAWS,SAAS,EAAG,OAPvD,OCzKC,cAAC,IAAD,UACI,mBAAGK,KAAK,4IAAR,+GAKR,eAACvC,EAAD,CAAKE,SAAS,EAAMG,IAAK,EAAzB,UACI,cAAC,IAAD,CAAKmC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,IAAK,EAA9C,SACI,eAAC,IAAD,CAAMC,MAAO,CAACC,WAAW,WAAzB,UACI,eAACC,GAAD,WACI,sDAE4C,MAAxC1B,EAAUM,EAASqB,iBAA2B,sBAAMH,MAAO,CAACnC,MAAM,WAApB,SAAiCiB,EAASqB,kBAC3C,uBAAMH,MAAO,CAACnC,MAAM,WAApB,cAAkCiB,EAASqB,sBAIhG,cAACC,GAAD,CAAUJ,MAAO,CAACnC,MAAM,WAAxB,SAAqCkB,EAAWsB,eAChD,0EAGR,cAAC,IAAD,CAAKX,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,IAAK,EAA9C,SACI,eAAC,IAAD,CAAMC,MAAO,CAACC,WAAW,WAAzB,UACI,eAACC,GAAD,WACI,sDAEuC,MAAnC1B,EAAUM,EAASwB,YAAsB,sBAAMN,MAAO,CAACnC,MAAM,WAApB,SAAiCiB,EAASwB,aAC3C,uBAAMN,MAAO,CAACnC,MAAM,WAApB,cAAkCiB,EAASwB,iBAI3F,cAACF,GAAD,CAAUJ,MAAO,CAACnC,MAAM,WAAxB,SAAqCkB,EAAWuB,aAChD,8DAGR,cAAC,IAAD,CAAKZ,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,IAAK,EAA9C,SACI,eAAC,IAAD,CAAMC,MAAO,CAACC,WAAW,WAAzB,UACI,eAACC,GAAD,WACI,sDAEoC,MAAhC1B,EAAUM,EAASyB,SAAmB,sBAAMP,MAAO,CAACnC,MAAM,WAApB,SAAiCiB,EAASyB,UAC3C,uBAAMP,MAAO,CAACnC,MAAM,WAApB,cAAkCiB,EAASyB,cAIxF,cAACH,GAAD,CAAUJ,MAAO,CAACnC,MAAM,WAAxB,SAAqCkB,EAAWwB,UAChD,8DAGR,cAAC,IAAD,CAAKb,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,IAAK,EAA9C,SACI,eAAC,IAAD,CAAOC,MAAO,CAACC,WAAW,WAA1B,UACI,eAACC,GAAD,WACI,sDAEmC,MAA/B1B,EAAUM,EAAS0B,QAAkB,sBAAMR,MAAO,CAACnC,MAAM,WAApB,SAAiCiB,EAAS0B,SAC3C,uBAAMR,MAAO,CAACnC,MAAM,WAApB,cAAkCiB,EAAS0B,aAGvF,cAACJ,GAAD,CAAUJ,MAAO,CAACnC,MAAM,WAAxB,SAAqCkB,EAAW0B,WAChD,0EAGR,cAAC,IAAD,CAAKf,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,IAAK,EAA9C,SACI,eAAC,IAAD,CAAMC,MAAO,CAACC,WAAW,WAAzB,UACI,eAACC,GAAD,WACI,sDAEyC,MAArC1B,EAAUM,EAAS4B,cAAwB,sBAAMV,MAAO,CAACnC,MAAM,WAApB,SAAiCiB,EAAS4B,eAC1C,uBAAMV,MAAO,CAACnC,MAAM,WAApB,cAAkCiB,EAAS4B,mBAI9F,cAACN,GAAD,CAAUJ,MAAO,CAACnC,MAAM,WAAxB,SAAqCkB,EAAW2B,eAChD,8DAGR,cAAC,IAAD,CAAKhB,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,IAAK,EAA9C,SACI,eAAC,IAAD,CAAMC,MAAO,CAACC,WAAW,WAAzB,UACI,eAACC,GAAD,WACI,sDAEiC,MAA7B1B,EAAUM,EAAS6B,MAAgB,sBAAMX,MAAO,CAACnC,MAAM,WAApB,SAAiCiB,EAAS6B,OAC3C,uBAAMX,MAAO,CAACnC,MAAM,WAApB,cAAkCiB,EAAS6B,WAIrF,cAACP,GAAD,CAAUJ,MAAO,CAACnC,MAAM,WAAxB,SAAqCkB,EAAW4B,OAChD,qEASlBT,GAAWpD,IAAO8D,EAAV,2FAKRR,GAAWtD,IAAO8D,EAAV,6F,uCClBCC,GA/FS,SAAC,GAA+G,IAOhIC,EAPkBC,EAA6G,EAA7GA,gBAAiBV,EAA4F,EAA5FA,aAA4F,EAEzGW,oBAAS,GAFgG,mBAE5HC,EAF4H,KAErHC,EAFqH,KAS/HC,EAAY,SAACC,GACfN,EAAgBO,KAAaC,SAASC,eAAe,oBACnD,IAAIC,EAAc,CACdC,MAAO,CACHC,KAAMN,EAAM,mDAAa,oDAE3BO,QAAS,CACPC,QAAS,OACThE,UAAU,CACRiE,MAAM,SAGVC,OAAQ,CACNC,KAAM,CAAC,CACLC,KAAMZ,EAAM,uCAAW,uCAEvBxE,KAAM,OAENgB,UAAW,CACPC,MAAO,WAIfoE,KAAM,CACJC,KAAM,KACNC,MAAO,KACPC,OAAQ,MAEVC,QAAS,CACPC,QAAS,CACPC,YAAa,KAGjBC,MAAO,CACLC,KAAM,WACNC,aAAa,EACbX,KAAMhB,EAAgB4B,KAAI,SAACC,GAAD,OAAYA,EAAK/D,KAAKgE,QAAQ,OAAQ,SAElEC,MAAO,CACLL,KAAM,SAERM,OAAQ,CACN,CACIf,KAAMZ,EAAM,uCAAW,uCACvBqB,KAAM,OACNV,KAAMX,EAAML,EAAgB4B,KAAI,SAACC,GAAD,OAAYA,EAAKzC,mBAAmBE,EAAasC,KAAI,SAACC,GAAD,OAAYA,EAAKvC,gBACtGtC,UAAW,CACPF,MAAOuD,EAAM,UAAY,UACzBpD,YAAa,EACbC,WAAY,SAEhBC,UAAW,CACPL,MAAOuD,EAAM,UAAY,cAMzCN,EAAckC,UAAUxB,IAG5ByB,qBAAU,WAEN,OADA9B,EAAUF,GACH,WACLH,EAAcoC,cAWpB,OACI,gCACI,eAACC,GAAD,CAAiBC,YAAa,QAASC,MAAOpC,EAAOqC,SARpC,SAACC,GACtBzC,EAAcoC,UACdhC,EAASqC,EAAEC,OAAOH,OAClBlC,EAAUoC,EAAEC,OAAOH,QAKf,UACE,cAACI,GAAD,CAAkBJ,OAAO,EAAzB,8DACA,cAACI,GAAD,CAAkBJ,OAAO,EAAzB,iEAEF,qBAAKK,GAAI,kBAAmB1D,MAAO,CAAC2D,MAAM,IAAIC,OAAO,WAOpDT,GAAkBrG,YAAO+G,KAAMC,MAAbhH,CAAH,gDAGf2G,GAAmB3G,YAAO+G,KAAMlG,OAAbb,CAAH,iKCediH,GApHY,WAAO,IAAD,EAEH/C,oBAAS,GAFN,mBAEtBgD,EAFsB,KAEfC,EAFe,KAI7B5C,KAAoB,QAAS6C,EAAQ,MAErC,IAAMC,EAAaC,iBAAO,IACpBC,EAAcD,iBAAO,MAEvBtD,EAAgB,KAEdwD,EAAUC,qBAAWC,IACrBC,EAAYF,qBAAWG,IAE7BzB,qBAAU,WACP0B,MACD,IAGF,IAAMA,EAAW,uCAAG,gCAAAC,EAAA,sEACDC,MAAM,oEADL,cAChBC,EADgB,gBAEHA,EAAOC,OAFJ,OAEhBhD,EAFgB,OAGtBiD,QAAQC,IAAIlD,EAAKA,KAAK,YAEhBmD,EAAYnD,EAAKA,KAAKoD,SAAS,GAAGC,SAASzC,KAAI,SAACC,GAAD,MAAsB,CAACZ,KAAKY,EAAKZ,KAAMqB,MAAOT,EAAKyC,MAAM/E,eAC9G6D,EAAWmB,QAAUJ,EACrB/D,EAAU6C,GAPY,4CAAH,qDAUX7C,EAAY,SAACqC,GAErB,IAAM+B,EAAUlE,KAAyBgD,EAAYiB,SACrDxE,EAAgByE,GAAoBlE,KAAagD,EAAYiB,SAC7D,IAAI9D,EAAa,CAChBC,MAAO,CACNC,KAAM,uCACNQ,KAAM,SACNtE,UAAW,CACVC,MAAO,YAGT8D,QAAS,CACTC,QAAS,OACThE,UAAU,CACTiE,MAAM,QAEP2D,UAAW,SAAC5E,GACX,OAAOA,EAAEmB,KAAO,qBAAQ,CAACnB,EAAEmB,KAAKC,MAAhB,UAA2BwB,EAAS,sCAAgB,uCAAiB,CAAC5C,EAAEmB,KAAKsB,OACrF,CAACzC,EAAEoB,QAGZe,OAAQ,CACR,CACCN,KAAM,MACNE,IAAK,QACLZ,KAAMoC,EAAWmB,QACjBG,MAAO,CACNC,MAAM,EACN7H,MAAO,QACP8H,UAAW,GACX9D,MAAO,QAER+D,KAAM,IACNC,MAAM,EACN9H,UAAW,CACV+H,YAAa,OACb9H,YAAa,GAEd+H,SAAU,CACTN,MAAO,CACN5H,MAAO,QACPmI,SAAU,IAEXjI,UAAW,CACVkI,UAAW,kBAKdC,UAAW,CACVzD,KAAM,YACNiD,MAAM,EACNS,OAAQ,CACP,CAAEC,IAAK,KACP,CAAEA,IAAK,IAAMC,IAAK,MAClB,CAAED,IAAK,IAAKC,IAAK,KACjB,CAAED,IAAK,IAAKC,IAAK,KACjB,CAAED,IAAK,GAAIC,IAAK,IAChB,CAAED,IAAK,EAAGC,IAAK,GACf,CAAEhD,MAAO,IAEViD,QAAS,CACRzI,MAAO,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,cAI7EiD,EAAckC,UAAUxB,IAUtB,OACE,gCACE,eAAC2B,GAAD,CAAiBE,MAAOW,EAAOV,SARX,SAACC,GACrBU,EAASV,EAAEC,OAAOH,OAClBc,EAAWmB,QAAU/B,EAAEC,OAAOH,MAAQiB,EAAUG,EAChDtD,EAAUoC,EAAEC,OAAOH,QAKnB,UACI,cAACI,GAAD,CAAkBJ,OAAO,EAAzB,sCACA,cAACI,GAAD,CAAkBJ,OAAO,EAAzB,yCAEJ,qBAAKrD,MAAO,CAAC2D,MAAM,IAAIC,OAAO,KAAM2C,IAAKlC,QCtHpCmC,GAAO,uCAAG,WAAMC,GAAN,eAAA7B,EAAA,sEACAC,MAAM4B,GADN,cACf3B,EADe,yBAEZA,EAAOC,QAFK,2CAAH,sDC8GL2B,GArGc,WAAO,IAAD,EAEK1F,mBAAsB,IAF3B,mBAExB2F,EAFwB,KAEZC,EAFY,KAI/B3D,qBAAU,WACN4D,MACD,IAGH,IAAMA,EAAsB,uCAAG,8BAAAjC,EAAA,4DACjB,oGADiB,SAEN4B,GADX,qGADiB,OAErB1B,EAFqB,OAGrB/C,EAAO+C,EAAO/C,KAAK+E,sBAAsBnE,KAAI,SAACC,EAAcmE,GAAf,mBAAC,eAAqCnE,GAAtC,IAA4CoE,IAAKD,OACpGH,EAAc7E,GACdiD,QAAQC,IAAIH,EAAO,UALQ,2CAAH,qDAQtBmC,EAAY,uCAAG,WAAOC,GAAP,uBAAAtC,EAAA,6DACTuC,EAAmBD,EAAnBC,SAAUC,EAASF,EAATE,KACdX,EAFa,gFAEkEU,EAFlE,iBAEmFC,GAFnF,SAGMvC,MAAM4B,EAAI,CAC7BY,OAAQ,OACRC,QAAS,CACL,eAAgB,sDANP,cAGXC,EAHW,gBASIA,EAASxC,OATb,OASXD,EATW,OAUjBE,QAAQC,IAAIH,EAAO,UAVF,2CAAH,sDAaZ0C,EAAU,CACZ,CACI/F,MAAO,uBACPgG,UAAW,QAEf,CACIhG,MAAO,qBACPgG,UAAW,YAEf,CACIhG,MAAO,eACPgG,UAAW,aACXC,OAAQ,SAAChG,GAAD,OAAiB,mCAAY,IAATA,EAAa,cAACiG,GAAD,CAAU9J,MAAM,UAAhB,SAA4B6D,IAAmB,eAACiG,GAAD,CAAU9J,MAAM,MAAhB,cAAwB6D,SAEpH,CACID,MAAO,2BACPgG,UAAW,cAEf,CACIhG,MAAO,2BACPgG,UAAW,WAEf,CACIhG,MAAO,eACPgG,UAAW,QAEf,CACIhG,MAAO,eACPgG,UAAW,QAEf,CACIhG,MAAO,2BACPgG,UAAW,SAEf,CACIhG,MAAM,eACNgG,UAAW,YACXC,OAAQ,SAAChG,EAAUwF,GAAX,OAA4B,mCAAE,cAAC,IAAD,CAAQvK,QAAS,kBAAIsK,EAAaC,IAAlC,+BAI9C,OACI,qCACI,eAAChK,EAAD,CAAKE,SAAS,EAAMG,IAAK,EAAGD,aAAc,EAA1C,UACI,eAAC,IAAD,sEAEK,mBAAG0C,MAAO,CAAC4H,WAAW,QAASnI,KAAK,oGAApC,mEAKL,cAAC,IAAD,UACI,mBAAGA,KAAK,mEAAR,4GAKR,eAACvC,EAAD,CAAKE,SAAS,EAAMG,IAAK,EAAGD,aAAc,EAA1C,UACI,cAAC,IAAD,UACI,cAAC,KAAD,CACIkK,QAASA,EACTb,WAAYA,EAAWkB,MAAK,SAACjD,EAAEkD,GAAH,OAASA,EAAEC,WAAanD,EAAEmD,kBAG9D,cAAC,IAAD,UACI,cAAC,GAAD,aAQdJ,GAAW7K,YAAOkL,KAAPlL,CAAH,yHC2BCmL,GA9HsB,SAAC,GAAgD,IAI9EnH,EAJ+BoH,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,SAAc,EAE/CrH,mBAAS,GAFsC,mBAE1EsH,EAF0E,KAE/DC,EAF+D,KAM7EpH,EAAY,SAACC,GACfN,EAAgBO,KAAaC,SAASC,eAAe,eACnD,IAAIC,EAAc,CACdC,MAAO,CACHC,KAAc,IAARN,EAAY,mDAAa,oDAEnCO,QAAS,CACLC,QAAS,OACT4D,UAAmB,IAARpE,EAAW,8CAAgD,GACtExD,UAAU,CACNiE,MAAM,SAGdC,OAAQ,CACJC,KAAc,IAARX,EAAY,CAAC,aAAEY,KAAM,4BAAWtE,IACxB,IAAR0D,EAAY,CAAC,aAAEY,KAAM,4BAAWtE,GAApB,aAAmCsE,KAAM,4BAAWtE,IACxD,IAAR0D,EAAY,CAAC,aAAEY,KAAM,4BAAWtE,GAApB,aAAmCsE,KAAM,4BAAWtE,GAApD,aAAmEsE,KAAM,4BAAWtE,IACxF,IAAR0D,EAAY,CAAC,aAAEY,KAAM,sBAAUtE,GAAnB,aAAkCsE,KAAM,sBAAUtE,IAAe,IAEvFuE,KAAM,CACFC,KAAM,KACNC,MAAO,KACPC,OAAQ,MAEZC,QAAS,CACLC,QAAS,CACLC,YAAa,KAGrBC,MAAO,CACHC,KAAM,WACNC,aAAa,EACbX,KAAMmG,EAASvF,KAAI,SAACC,GAAD,OAAYA,EAAK/D,KAAKgE,QAAQ,OAAQ,SAE7DC,MAAO,CACHL,KAAM,SAEVM,OAAgB,IAAR3B,EAAY,CAAC,aAETY,KAAM,2BACNS,KAAM,OACNV,KAAMmG,EAASvF,KAAI,SAACC,GAAD,OAAYA,EAAKtC,eACjChC,IAEC,IAAR8C,EAAY,CAAC,aAETY,KAAM,2BACNS,KAAM,OACNV,KAAMoG,EAASxF,KAAI,SAACC,GAAD,OAAYA,EAAKrC,YACjClC,GALK,aAQR2D,KAAM,2BACNS,KAAM,OACNV,KAAMoG,EAASxF,KAAI,SAACC,GAAD,OAAYA,EAAK4F,YACjCpK,IAEC,IAARgD,EAAY,CAAC,aAETY,KAAM,2BACNS,KAAM,OACNV,KAAMqG,EAAWzF,KAAI,SAACC,GAAD,OAAYA,EAAKrC,YACnChC,GALK,aAQRyD,KAAM,2BACNS,KAAM,OACNV,KAAMqG,EAAWzF,KAAI,SAACC,GAAD,OAAYA,EAAK6F,SACnC3K,GAXK,aAcRkE,KAAM,2BACNS,KAAM,OACNV,KAAMqG,EAAWzF,KAAI,SAACC,GAAD,OAAYA,EAAKjC,SACnCxC,IAEC,IAARiD,EAAY,CAAC,aAETY,KAAM,qBACNS,KAAM,OACNV,KAAMsG,EAAS1F,KAAI,SAACC,GAAD,OAAYA,EAAK8F,aACjC5K,GALK,aAQRkE,KAAM,qBACNS,KAAM,OACNV,KAAMsG,EAAS1F,KAAI,SAACC,GAAD,OAAYA,EAAK+F,aACjCxK,IAEP,IAEZ2C,EAAckC,UAAUxB,IAG5ByB,qBAAU,WAEN,OADA9B,EAAUmH,GACH,WACLxH,EAAcoC,cAWpB,OACI,gCACI,eAACC,GAAD,CAAiBC,YAAa,QAASC,MAAOiF,EAAWhF,SARxC,SAACC,GACtBzC,EAAcoC,UACdqF,EAAahF,EAAEC,OAAOH,OACtBlC,EAAUoC,EAAEC,OAAOH,QAKf,UACI,cAACI,GAAD,CAAkBJ,MAAO,EAAzB,8DACA,cAACI,GAAD,CAAkBJ,MAAO,EAAzB,8DACA,cAACI,GAAD,CAAkBJ,MAAO,EAAzB,8DACA,cAACI,GAAD,CAAkBJ,MAAO,EAAzB,2DAEJ,qBAAKK,GAAI,aAAc1D,MAAO,CAAC2D,MAAM,IAAIC,OAAO,WCzH/CY,GAAaoE,wBAAc,IAC3BlE,GAAekE,wBAAc,IAoG3BC,GAjGU,WAAO,IAAD,EACK7H,mBAA+B,IADpC,mBACpBlC,EADoB,KACVgK,EADU,OAES9H,mBAA8B,IAFvC,mBAEpBjC,EAFoB,KAERgK,EAFQ,OAIG/H,mBAAS,IAJZ,mBAIpBsD,EAJoB,KAIX0E,EAJW,OAKOhI,mBAAS,IALhB,mBAKpByD,EALoB,KAKTwE,EALS,OAOmBjI,mBAAS,IAP5B,mBAOpBD,EAPoB,KAOHmI,EAPG,OAQalI,mBAAS,IARtB,mBAQpBX,EARoB,KAQN8I,EARM,OAUKnI,mBAAS,IAVd,mBAUpBkH,EAVoB,KAUVkB,EAVU,OAWKpI,mBAAS,IAXd,mBAWpBmH,EAXoB,KAWVkB,EAXU,OAYSrI,mBAAS,IAZlB,mBAYpBoH,EAZoB,KAYRkB,EAZQ,OAaKtI,mBAAS,IAbd,mBAapBqH,EAboB,KAaVkB,EAbU,KAgB3BtG,qBAAU,WACNuG,IACAC,MACD,IAEH,IAAMD,EAAO,uCAAG,4CAAA5E,EAAA,4DACF,4IADE,SAES4B,GADX,6IADE,OAEN1B,EAFM,OAGNhG,EAAYgG,EAAO/C,KAAK2H,gBAAgB5E,EAAO/C,KAAK2H,gBAAgBC,OAAQ,GAClFZ,EAAcjE,EAAO/C,KAAK6H,aAAa9E,EAAO/C,KAAK2H,gBAAgBC,OAAQ,IACrE5H,EAAO+C,EAAO/C,KAAK6H,aAAajH,KAAI,SAACC,GAAD,MAAa,CAACrC,QAAQqC,EAAKrC,QAAQD,WAAYsC,EAAKtC,eAAcuJ,OAAO,GACnH/K,EAASyB,QAAUwB,EAAK,GAAGxB,QAAUwB,EAAK,GAAGxB,QAC7CzB,EAASwB,WAAayB,EAAK,GAAGzB,WAAayB,EAAK,GAAGzB,WACnDwI,EAAYhK,GAGNiC,EAAkB+D,EAAO/C,KAAK2H,gBAAgB/G,KAAI,SAACC,GAAD,MAA8B,CAACzC,gBAAgByC,EAAKzC,gBAAiBtB,KAAK+D,EAAK/D,SACvIqK,EAAmBnI,GAGbV,EAAeyE,EAAO/C,KAAK6H,aAAajH,KAAI,SAACC,GAAD,MAA2B,CAACvC,aAAauC,EAAKvC,aAAcxB,KAAK+D,EAAK/D,SACxHsK,EAAgB9I,GAGV6H,EAAWpD,EAAO/C,KAAK6H,aAAajH,KAAI,SAACC,GAAD,MAAwB,CAACtC,WAAYsC,EAAKtC,WAAYzB,KAAK+D,EAAK/D,SAC9GuK,EAAYlB,GAGNC,EAAWrD,EAAO/C,KAAK2H,gBAAgB/G,KAAI,SAACC,GAAD,MAAuB,CAACrC,QAASqC,EAAKrC,QAASiI,QAAS5F,EAAK4F,QAAS3J,KAAM+D,EAAK/D,SAClIwK,EAAYlB,GAGNC,EAAatD,EAAO/C,KAAK6H,aAAajH,KAAI,SAACC,GAAD,MAAyB,CAACrC,QAASqC,EAAKrC,QAASkI,KAAM7F,EAAK6F,KAAM9H,KAAMiC,EAAKjC,KAAM9B,KAAM+D,EAAK/D,SAC9IyK,EAAclB,GAGRC,EAAWvD,EAAO/C,KAAK6H,aAAajH,KAAI,SAACC,GAAD,MAAuB,CAAC8F,SAAU9F,EAAK8F,SAAUC,SAAU/F,EAAK+F,SAAU9J,KAAM+D,EAAK/D,SACnI0K,EAAYlB,GAhCA,4CAAH,qDAqCPoB,EAAU,uCAAG,kCAAA7E,EAAA,sEACMC,MAAM,oEADZ,cACTC,EADS,gBAEIA,EAAOC,OAFX,OAEThD,EAFS,OAGTmD,EAAWnD,EAAKA,KAAKoD,SAAS,GAAGC,SAASzC,KAAI,SAACC,GAAD,MAAsB,CAACZ,KAAKY,EAAKZ,KAAMqB,MAAOT,EAAKyC,MAAM/E,eACvGwJ,EAAY/H,EAAKA,KAAKoD,SAAS,GAAGC,SAASzC,KAAI,SAACC,GAAD,MAAsB,CAACZ,KAAKY,EAAKZ,KAAMqB,MAAOT,EAAKyC,MAAM9E,YAE9GyI,EAAW9D,GACX+D,EAAaa,GAPE,4CAAH,qDAUhB,OACI,qCACI,cAACtM,EAAD,UACI,cAAC,GAAD,CAAUsB,SAAUA,EAAUC,WAAYA,MAG9C,cAACvB,EAAD,CAAiBC,UAAW,EAA5B,SACI,cAAC+G,GAAWuF,SAAZ,CAAqB1G,MAAOiB,EAA5B,SACI,cAACI,GAAaqF,SAAd,CAAuB1G,MAAOoB,EAA9B,SACI,cAAC,GAAD,UAKZ,cAACjH,EAAD,CAAiBC,UAAW,EAA5B,SACI,eAACP,EAAD,CAAKE,SAAS,EAAMG,IAAK,EAAGD,aAAc,EAA1C,UACI,cAAC,IAAD,UACI,cAAC,GAAD,CAAYyD,gBAAiBA,EAAiBV,aAAcA,MAEhE,cAAC,IAAD,UACI,cAAC,GAAD,CAAY6H,SAAUA,EAAUC,SAAUA,EAAUC,WAAYA,EAAYC,SAAUA,eCnGtG2B,GAAmCC,IAAnCD,OAAQE,GAA2BD,IAA3BC,MAAOC,GAAoBF,IAApBE,QAASC,GAAWH,IAAXG,OAsCjBC,GApCQ,SAAClN,GAAW,IAAD,EAEI6D,oBAAS,GAFb,mBAEvB9E,EAFuB,KAEZoO,EAFY,KAGxBC,EAAWnG,iBAAO,MAElBoG,EAAWC,cAMjB,OACI,mCACI,eAAC,IAAD,WACI,cAACC,GAAD,CAAYnE,IAAKgE,EAAU3I,QAAS,KAAM+I,aAAW,EAACzO,UAAWA,EAAjE,SACI,cAAC,EAAD,CAAaA,UAAWA,MAE5B,eAAC,IAAD,CAAQ8D,MAAO,CAAC4K,gBAAgB,QAAhC,UACI,eAACC,GAAD,CAAalO,QAXb,WACZ2N,GAAcpO,IAUF,UAEQA,EAAY,cAAC4O,GAAD,UAAW,cAACC,EAAA,EAAD,MAAqC,cAACD,GAAD,UAAW,cAACE,EAAA,EAAD,MAE3E,sBAAMhL,MAAO,CAACiL,YAAY,OAA1B,qDAEJ,cAACd,GAAD,CAASnK,MAAO,CAACkL,QAAS,GAAGC,UAAW,KAAxC,SAE8B,MAAtBX,EAASY,SAAmB,cAAC,IAAD,CAAOC,KAAK,aAAaC,QAAS,cAAC,GAAD,MAAc,cAAC,IAAD,MAGpF,cAAClB,GAAD,CAAQpK,MAAO,CAAEuL,UAAW,UAA5B,2CASdT,GAAYhO,IAAO0O,KAAV,6HAMTX,GAAc/N,YAAOkN,GAAPlN,CAAH,yGAKX4N,GAAa5N,YAAOoN,GAAPpN,CAAH,sDCxCD2O,GAbC,kBACd,qBAAKnP,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+O,KAAK,IAAIC,QAAS,cAAC,GAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,GAAD,IAA9B,SACE,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,GAAD,gBCEvBI,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCFdQ,IAASzE,OACP,cAAC,IAAM0E,WAAP,UACE,cAAC,GAAD,MAEF9K,SAASC,eAAe,SAM1BmK,O","file":"static/js/main.2e5d5bd9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Menu } from 'antd';\r\nimport {\r\n    FundOutlined,\r\n    PieChartOutlined,\r\n    StockOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport styled from \"@emotion/styled\";\r\n\r\ntype Props = {\r\n    collapsed: boolean\r\n}\r\n\r\nconst CostomSider: React.FC<Props> = ({collapsed}) => {\r\n    \r\nconst navigate = useNavigate();\r\n\r\nconst nav = (path:string) => {\r\n    navigate(path);\r\n}\r\n        return (\r\n            <>\r\n                {\r\n                    collapsed ? <Logo className=\"logo\">C-19</Logo> : <Logo className=\"logo\">COVID-19</Logo>\r\n                }\r\n                <MenuStyle mode=\"inline\" defaultSelectedKeys={['1']}>\r\n                    <MenuItemStyle key=\"1\" onClick={() => nav(\"/main/home\")} icon={<FundOutlined />}>\r\n                        疫情数据\r\n                    </MenuItemStyle>\r\n                </MenuStyle>\r\n            </>\r\n        )\r\n}\r\nexport default CostomSider\r\n\r\nconst Logo = styled.div`\r\n    height: 32px;\r\n    margin: 16px;\r\n    color: #98c0c5;\r\n    font-size: 22px;\r\n    background: rgba(255, 255, 255, 0.3);\r\n`\r\nconst MenuStyle = styled(Menu)`\r\n    background-color: powderblue;\r\n   \r\n`\r\nconst MenuItemStyle = styled(Menu.Item)`\r\n    color: #fff;\r\n    span {\r\n        color: cadetblue;\r\n    }\r\n`","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport { Button, Spin, Typography } from 'antd';\r\n// import { Typography } from \"antd\";\r\n\r\ntype RowProps = {\r\n\tgap?: number | boolean,\r\n\tbetween?: boolean,\r\n\tmarginBottom?: number,\r\n\tmarginTop?: number,\r\n}\r\n\r\nexport const Row = styled.div<RowProps>`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: ${props => props.between ? 'space-between' : undefined};\r\n\tmargin-bottom: ${props => props.marginBottom + 'rem'};\r\n\t> * {\r\n\t\tmargin-top: 0 !important;\r\n\t\tmargin-bottom: 0 !important;\r\n\t\tmargin-right: ${props => typeof props.gap === 'number' ? props.gap + 'rem' : props.gap ? '2rem' : undefined};\r\n\t}\r\n`\r\n// 页面padding\r\nexport const ScreenContainer = styled.div<RowProps>`\r\n\tpadding: 0 3.2rem;\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tmargin-top: ${props => props.marginTop + 'rem'};\r\n\t> * {\r\n\t\tmargin-top: ${props => typeof props.gap === 'number' ? props.gap + 'rem' : props.gap ? '2rem' : undefined};\r\n\t\tmargin-bottom: ${props => typeof props.gap === 'number' ? props.gap + 'rem' : props.gap ? '2rem' : undefined};\r\n\t}\r\n`\r\n\r\n// 页面初次加载时的loading\r\nexport const FullPageLoading = () => <FullPage><Spin tip=\"Loading...\" size={'large'}></Spin></FullPage>\r\n\r\n// 页面发生错误时返回的错误信息\r\nexport const FullPageError = ({ error }: { error: Error | null }) => <FullPage>\r\n\t<ErrorBox error={error} />\r\n</FullPage>\r\n\r\nconst FullPage = styled.div`\r\n\theight: 100vh;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n`\r\n\r\n// 类型守卫, 解决error类型为unknown的场景\r\nconst isError = (value: any): value is Error => value?.message\r\n\r\n// 自定义Error组件，给定任意类型，只有是在真正报错误信息的情况下才显示error.message\r\nexport const ErrorBox = ({ error }: { error: unknown }) => {\r\n\tif (isError(error)) {\r\n\t\treturn <Typography.Text type={'danger'}>{error?.message}</Typography.Text>\r\n\t}\r\n\treturn null\r\n}\r\n\r\n// padding为0的按钮\r\nexport const ButtonNoPadding = styled(Button)`\r\n\tpadding: 0;\r\n`\r\n/* echarts 公共配置 */\r\nexport const legendData = {icon: 'rect', textStyle: { color: '#000' }} // 抽出折线图公共分类类型样式\r\n\r\nexport const healConfig = {itemStyle: {color:'#65b379', borderWidth: 1 ,borderType: 'solid'},lineStyle: {color:'#65b379'}} // 抽出折线图治愈类型样式\r\n\r\nexport const deadConfig = {itemStyle: {color:'#87878b',   borderWidth: 1 ,borderType: 'solid'},lineStyle: {color:'#87878b'}} // 抽出折线图死亡类型样式\r\n\r\nexport const suspectConfig = {itemStyle: {color:'#ffd661',   borderWidth: 1 ,borderType: 'solid'},lineStyle: {color:'#ffd661'}} // 抽出折线图新增疑似类型样式\r\n\r\nexport const confirmConfig = {itemStyle: {color:'#f06061',   borderWidth: 1 ,borderType: 'solid'},lineStyle: {color:'#f06061'}} // 抽出折线图新增确诊类型样式\r\n\r\nexport const nowConfirmConfig = {itemStyle: {color:'#ff7b7c',   borderWidth: 1 ,borderType: 'solid'},lineStyle: {color:'#ff7b7c'}} // 抽出折线图全国现有确诊类型样式（以及本土新增确诊）\r\n\r\nexport const totalConfirmConfig = {itemStyle: {color:'#9b0a0e',   borderWidth: 1 ,borderType: 'solid'},lineStyle: {color:'#9b0a0e'}} // 抽出折线图全国累计确诊类型样式","\r\nimport { useEffect, useRef, useState } from 'react'\r\n// 排除value为0的情况\r\nexport const isFalsy = (value: unknown) => value === 0 ? false : !value\r\n\r\nexport const isVoid = (value: unknown) => value === undefined || value === null || value === ''\r\n\r\n// let a: object\r\n// a = { name: 'jack' }\r\n// a = () => { }\r\n// a = new RegExp('')\r\n\r\n// let b: { [key: string]: unknown }\r\n// b = { name: 'jack' }\r\n// b = () => { }\r\n\r\n// 在一个函数里，改变传入的对象本身是不好的\r\nexport const cleanObject = (object: {[key: string]: unknown}) => {\r\n\tif (!object) {\r\n    return {};\r\n  }\r\n\tconst result = { ...object }\r\n\tObject.keys(result).forEach(key => {\r\n\t\t//将对象key所对应的值赋值给value\r\n\t\tconst value = result[key]\r\n\t\t// 0\r\n\t\tif (isVoid(value)) {\r\n\t\t\tdelete result[key]\r\n\t\t}\r\n\t})\r\n\treturn result\r\n}\r\n\r\n// 页面挂载时只执行一次的hook\r\nexport const useMount = (callback: () => void) => {\r\n\tuseEffect(() => {\r\n\t\tcallback()\r\n\t\t// TODO 依赖项里加上callback会造成无限循环，这个和useCallback以及useMemo有关系\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [])\r\n}\r\n\r\n// 延时执行函数  后面用泛型来规范类型\r\nexport const useDebounce = <V>(value: V, delay?: number) => {\r\n\tconst [debouncedValue, setDebouncedValue] = useState(value)\r\n\r\n\tuseEffect(() => {\r\n\t\t// 每次在value变化以后，设置一个定时器\r\n\t\tconst timeout = setTimeout(() => setDebouncedValue(value), delay)\r\n\t\t// 每次再上一个useEffect处理完之后再运行\r\n\t\treturn () => clearTimeout(timeout)\r\n\t}, [value, delay])\r\n\r\n\treturn debouncedValue\r\n}\r\n\r\n// 数组的增删清空\r\nexport const useArray = <T>(initialArray: T[]) => {\r\n\tconst [value, setValue] = useState(initialArray)\r\n\treturn {\r\n\t\tvalue,\r\n\t\tsetValue,\r\n\t\tadd: (item: T) => setValue([...value, item]),\r\n\t\tclear: () => setValue([]),\r\n\t\tremoveIndex: (index: number) => {\r\n\t\t\tconst copy = [...value]\r\n\t\t\tcopy.splice(index, 1)\r\n\t\t\tsetValue(copy)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// 自定义项目浏览器顶部标签页的title\r\nexport const useDocumentTitle = (title: string, keepOnUnmount = true) => {\r\n\t// useRef持久化变量，返回的 ref 对象在组件的整个生命周期内保持不变\r\n\tconst oldTitle = useRef(document.title).current\r\n\t// 页面加载时: 旧title\r\n\t// 加载后: 新title\r\n\tuseEffect(() => {\r\n\t\tdocument.title = title\r\n\t}, [title])\r\n\t\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tif (!keepOnUnmount) {\r\n\t\t\t\t// 如果不指定依赖（即监听的数据），独到的就是旧title\r\n\t\t\t\tdocument.title = oldTitle\r\n\t\t\t}\r\n\t\t}\r\n\t},[keepOnUnmount, oldTitle])\r\n}\r\n\r\n// 返回根路由\r\nexport const resetRoute = () => window.location.href = window.location.origin\r\n\r\n/**\r\n * 传入一个对象，和键集合，返回对应的对象中的键值对\r\n * @param obj\r\n * @param keys\r\n */\r\nexport const subset = <\r\n  O extends { [key in string]: unknown },\r\n  K extends keyof O\r\n>(\r\n  obj: O,\r\n  keys: K[]\r\n) => {\r\n  const filteredEntries = Object.entries(obj).filter(([key]) =>\r\n    keys.includes(key as K)\r\n  );\r\n  return Object.fromEntries(filteredEntries) as Pick<O, K>;\r\n};\r\n\r\n/** \r\n * 返回组件的挂载状态，如果还没挂载或者已经卸载，返回false；反之，返回true\r\n */\r\n\r\nexport const useMountedRef = () => {\r\n\tconst mountedRef = useRef(false)\r\n\t\r\n\tuseEffect(() => {\r\n\t\tmountedRef.current = true\r\n\t\treturn () => {\r\n\t\t\tmountedRef.current = false\r\n\t\t}\r\n\t})\r\n\treturn mountedRef\r\n }\r\n\r\n /**\r\n  * 传入一个数字，将其转为字符串并获取第一个字符\r\n  */\r\nexport const useCharAt = (param?: Number | String) => {\r\n\tif(typeof param == \"string\"){\r\n\t\treturn param.substr(0,1)\r\n\t}else if(typeof param == \"number\"){\r\n\t\tparam = param.toString()\r\n\t\treturn param.substr(0,1)\r\n\t}\r\n}\r\n\r\n/**\r\n * 传入一个数组对象，根据某一相同value合并成新的数组\r\n */\r\ninterface paramsObj {\r\n\tvalue?: any\r\n}\r\nexport const handlerDatas = (arr:[], value:string) => {\r\n\tlet obj = {};\r\n\tarr.forEach((item:paramsObj, index) => {\r\n\t\tlet { value } = item;\r\n\t\tif (!obj[value]) {\r\n\t\t\tobj[value] = {\r\n\t\t\t\tvalue,\r\n\t\t\t\tchildren:[]\r\n\t\t\t}\r\n\t\t}\r\n\t\tobj[value].children.push(item);\r\n\t});\r\n\treturn Object.values(obj); // 最终输出\r\n  }\r\n\r\n/**\r\n*传入一个数组，切割中国省份字符串，只保留名称; 省，市，自治区等字符去除 \r\n*/\r\ninterface provinceProps {\r\n\tname: string,\r\n\tvalue: number\r\n}\r\nexport const getProvinceParams = (arr:provinceProps[])=>arr.map(({name,value})=>[4,6].includes(name.length)?{name: name.slice(0,3),value}:{name: name.slice(0,2),value})\r\n// export const getProvinceParams = (arr:provincePros[]) => {\r\n// \treturn arr.map(item=>{\r\n// \t\tif(item.name.length === 4 || item.name.length === 6){\r\n// \t\t\treturn {\r\n// \t\t\t\tname:item.name.slice(0, 3),\r\n// \t\t\t\tvalue: item.value\r\n// \t\t\t}\r\n// \t\t}else {\r\n// \t\t\treturn {\r\n// \t\t\t\tname: item.name.slice(0, 2),\r\n// \t\t\t\tvalue: item.value\r\n// \t\t\t}\r\n// \t\t}\r\n// \t})\r\n// }\r\n\r\n\r\nexport const toYMDHMS = (date: any) => {\t\r\n    if (!date) {\r\n        return \"\";\r\n    }\r\n    date = new Date(date);\r\n    return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, \"0\")}-${date\r\n        .getDate()\r\n        .toString()\r\n        .padStart(2, \"0\")} ${date.getHours().toString().padStart(2, \"0\")}:${date.getMinutes().toString()\r\n        .padStart(2, \"0\")}:${date.getSeconds().toString().padStart(2, \"0\")}`;\r\n};\r\n","import React from 'react'\r\nimport { Card, Col } from 'antd'\r\nimport { Row } from \"components/lib\";\r\nimport styled from \"@emotion/styled\";\r\nimport { toYMDHMS, useCharAt } from 'utils';\r\nimport { PreDayProps, TotalProps } from 'types/cardInfo';\r\n\r\ntype Props = {\r\n    chinaAdd: Partial<PreDayProps> ;\r\n    chinaTotal: Partial<TotalProps>;\r\n};\r\n\r\nconst CardInfo : React.FC<Props> = ({chinaAdd, chinaTotal}) => {\r\n\r\n    let time = new Date()\r\n\r\n    return (\r\n        <>\r\n            <Row marginBottom={2} gap={2}>\r\n                <Col>截止 {toYMDHMS(time)}</Col>\r\n                <Col>\r\n                    <a href='https://api.inews.qq.com/newsqa/v1/query/inner/publish/modules/list?modules=chinaDayList,chinaDayAddList,nowConfirmStatis,provinceCompare'>\r\n                        数据来源:https://api.inews.qq.com/newsqa/v1/query/inner/publish/modules/list\r\n                    </a>\r\n                </Col>\r\n            </Row>\r\n            <Row between={true} gap={2}>\r\n                <Col xs={12} sm={6} md={3} lg={3} xl={3} xxl={3}>\r\n                    <Card style={{background:\"#fffaf7\"}}>\r\n                        <PreStyle>\r\n                            <span>较上日</span>\r\n                            {\r\n                                useCharAt(chinaAdd.localConfirmadd) === \"-\" ? <span style={{color:'#e57631'}}>{chinaAdd.localConfirmadd}</span>\r\n                                                                           : <span style={{color:'#e57631'}}>+{chinaAdd.localConfirmadd}</span>\r\n                            }\r\n                            \r\n                        </PreStyle>\r\n                        <NumStyle style={{color:'#e57631'}}>{chinaTotal.localConfirm}</NumStyle>\r\n                        <p>本土现有确诊</p>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={3} lg={3} xl={3} xxl={3}>\r\n                    <Card style={{background:\"#fff8f8\"}}>\r\n                        <PreStyle>\r\n                            <span>较上日</span>\r\n                            {\r\n                                useCharAt(chinaAdd.nowConfirm) === \"-\" ? <span style={{color:'#e61c1d'}}>{chinaAdd.nowConfirm}</span>\r\n                                                                      : <span style={{color:'#e61c1d'}}>+{chinaAdd.nowConfirm}</span>\r\n                            }\r\n                            \r\n                        </PreStyle>\r\n                        <NumStyle style={{color:'#e61c1d'}}>{chinaTotal.nowConfirm}</NumStyle>\r\n                        <p>现有确诊</p>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={3} lg={3} xl={3} xxl={3}>\r\n                    <Card style={{background:\"#fff4f4\"}} >\r\n                        <PreStyle>\r\n                            <span>较上日</span>\r\n                            {\r\n                                useCharAt(chinaAdd.confirm) === \"-\" ? <span style={{color:'#be2121'}}>{chinaAdd.confirm}</span>\r\n                                                                   : <span style={{color:'#be2121'}}>+{chinaAdd.confirm}</span>\r\n                            }\r\n                            \r\n                        </PreStyle>\r\n                        <NumStyle style={{color:'#be2121'}}>{chinaTotal.confirm}</NumStyle>\r\n                        <p>累计确诊</p>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={3} lg={3} xl={3} xxl={3}>\r\n                    <Card  style={{background:\"#fef7ff\"}}>\r\n                        <PreStyle>\r\n                            <span>较上日</span>\r\n                            {\r\n                                useCharAt(chinaAdd.infect) === \"-\" ? <span style={{color:'#ae3ac6'}}>{chinaAdd.infect}</span>\r\n                                                                  : <span style={{color:'#ae3ac6'}}>+{chinaAdd.infect}</span>\r\n                            }\r\n                        </PreStyle>\r\n                        <NumStyle style={{color:'#ae3ac6'}}>{chinaTotal.noInfect}</NumStyle>\r\n                        <p>无症状感染者</p>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={3} lg={3} xl={3} xxl={3}>\r\n                    <Card style={{background:\"#f1f5ff\"}}>\r\n                        <PreStyle>\r\n                            <span>较上日</span>\r\n                            {\r\n                                useCharAt(chinaAdd.importedCase) === \"-\" ? <span style={{color:'#4e8be6'}}>{chinaAdd.importedCase}</span>\r\n                                                                         : <span style={{color:'#4e8be6'}}>+{chinaAdd.importedCase}</span>\r\n                            }\r\n                            \r\n                        </PreStyle>\r\n                        <NumStyle style={{color:'#4e8be6'}}>{chinaTotal.importedCase}</NumStyle>\r\n                        <p>境外输入</p>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={3} lg={3} xl={3} xxl={3}>\r\n                    <Card style={{background:\"#f3f6f8\"}}>\r\n                        <PreStyle>\r\n                            <span>较上日</span>\r\n                            {\r\n                                useCharAt(chinaAdd.dead) === \"-\" ? <span style={{color:'#4e5a65'}}>{chinaAdd.dead}</span>\r\n                                                                : <span style={{color:'#4e5a65'}}>+{chinaAdd.dead}</span>\r\n                            }\r\n                            \r\n                        </PreStyle>\r\n                        <NumStyle style={{color:'#4e5a65'}}>{chinaTotal.dead}</NumStyle>\r\n                        <p>累计死亡</p>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default CardInfo\r\n\r\nconst PreStyle = styled.p`\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    color:#7c7c7c;\r\n`\r\nconst NumStyle = styled.p`\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    font-size: 32px;\r\n`\r\n","import React, { useEffect, useState } from 'react'\nimport * as echarts from 'echarts';\nimport { Radio } from 'antd';\nimport styled from \"@emotion/styled\";\nimport { localConfirmAddProps, localConfirmProps } from 'types/addConfirmTrend';\n\n\n\nconst AddConfirmTrend = ({localConfirmAdd, localConfirm}:{localConfirmAdd:localConfirmAddProps[], localConfirm:localConfirmProps[]}) =>{\n\n    const [isAdd, setIsAdd] = useState(true) // 是否是本土新增，否则是本土现有\n\n    // const [optionObj, setOptionObj] = useState({})\n    // const addConfirmTrend = useRef(null)\n\n    let chartInstance:any\n    \n    let initChart = (trg?:any) => {\n      chartInstance = echarts.init(document.getElementById('addConfirmTrend') as HTMLDivElement); // 图表实例\n        let option: any = {\n            title: {\n                text: trg ? '本土新增确诊趋势' : '本土现有确诊趋势'\n              },\n              tooltip: {\n                trigger: 'axis',\n                textStyle:{\n                  align:'left'\n              }\n              },\n              legend: {\n                data: [{\n                  name: trg ? '本土新增确诊' : '本土现有确诊',\n                  // 强制设置图形为圆。\n                  icon: 'rect',\n                  // 设置文本为黑色\n                  textStyle: {\n                      color: '#000'\n                  }\n              }]\n              },\n              grid: {\n                left: '5%',\n                right: '4%',\n                bottom: '3%',\n              },\n              toolbox: {\n                feature: {\n                  saveAsImage: {}\n                }\n              },\n              xAxis: {\n                type: 'category',\n                boundaryGap: false,\n                data: localConfirmAdd.map((item:any)=>item.date.replace(/[.]/g, '-'))\n              },\n              yAxis: {\n                type: 'value'\n              },\n              series: [\n                {\n                    name: trg ? '本土新增确诊' : '本土现有确诊',\n                    type: 'line',\n                    data: trg ? localConfirmAdd.map((item:any)=>item.localConfirmadd) : localConfirm.map((item:any)=>item.localConfirm),\n                    itemStyle: {\n                        color: trg ? '#e57631' : '#f06061',   \n                        borderWidth: 1 ,\n                        borderType: 'solid'\n                    },\n                    lineStyle: {\n                        color: trg ? '#e57631' : '#f06061'\n                    }\n                },\n              ]\n        };\n        // setOptionObj(option)\n        chartInstance.setOption(option);\n    };\n    \n    useEffect(() => {\n        initChart(isAdd);\n        return ()=>{\n          chartInstance.dispose() // 初次渲染时清除图表实例\n        }\n    });\n\n    // 切换折线图数据\n    const handleLineChange = (e:any) => {\n        chartInstance.dispose() // 切换时清除上次图表实例\n        setIsAdd(e.target.value)\n        initChart(e.target.value)\n    }\n\n    return(\n        <div>\n            <RadioGroupStyle buttonStyle={'solid'} value={isAdd} onChange={handleLineChange}>\n              <RadioButtonStyle value={true}>本土新增确诊趋势</RadioButtonStyle>\n              <RadioButtonStyle value={false}>本土现有确诊趋势</RadioButtonStyle>\n            </RadioGroupStyle>\n            <div id={'addConfirmTrend'} style={{width:800,height:600}}/>\n            {/* <CostomEcharts currentRef={addConfirmTrend} style={{width:800,height:600}} option={optionObj} param={isAdd} /> */}\n        </div>\n    )\n}\nexport default AddConfirmTrend\n\nexport const RadioGroupStyle = styled(Radio.Group)`\n  padding: 20px 0;\n`\nexport const RadioButtonStyle = styled(Radio.Button)`\n  margin-right: 20px;\n  color: cadetblue;\n  &:hover{\n    color: #b0e0e6;\n    background: #fff;\n    border-color: #b0e0e6;\n  }\n`\n","/* 中国地图数据切换 */\r\nimport React,{ useState, useEffect, useRef, useContext } from 'react'\r\nimport * as echarts from 'echarts';\r\nimport { NowContext, TotalContext } from 'pages/home';\r\nimport { nowDataProps } from 'types/chinaMap';\r\nimport { RadioButtonStyle, RadioGroupStyle } from '../addConfirmTrend';\r\n\r\nconst ChinaMap: React.FC = () => {\r\n\r\n    const [isNow, setIsNow] = useState(true) // 判断是否是现存确诊\r\n\r\n    echarts.registerMap(\"china\", require(\"assets/json/china.json\"));\r\n\r\n    const confirmRef = useRef({}) // 累计确诊数据\r\n    const chinaMapRef = useRef(null)\r\n\r\n    let chartInstance = null;\r\n\r\n    const nowData = useContext(NowContext)\r\n    const totalData = useContext(TotalContext) \r\n      \r\n    useEffect(() => {\r\n      \tgetCityList()  \r\n    },[])\r\n\r\n     // 获取各省数据\r\n    const getCityList = async () => {\r\n\t\tconst result = await fetch('https://mock.yonyoucloud.com/mock/22022/COVID-19/getOnsInfo/list')\r\n\t\tconst data = await result.json()\r\n\t\tconsole.log(data.data,'datadata');\r\n\t\t\r\n\t\tconst listData =  data.data.areaTree[0].children.map((item:nowDataProps)=>({name:item.name, value: item.total.nowConfirm})) // 获取现有确诊人数数据\r\n\t\tconfirmRef.current = listData\r\n\t\tinitChart(isNow)     \r\n    } \r\n\r\n    const initChart = (target?:boolean) => {\r\n\r\n\t\tconst myChart = echarts.getInstanceByDom(chinaMapRef.current as unknown as HTMLDivElement);\r\n\t\tchartInstance = myChart ? myChart : echarts.init(chinaMapRef.current as unknown as HTMLDivElement) //图表实例\r\n\t\tlet option:any = {\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: \"全国疫情地图\",\r\n\t\t\t\tleft: \"center\",\r\n\t\t\t\ttextStyle: {\r\n\t\t\t\t\tcolor: \"#9c0505\"\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttooltip: { // 提示框c\r\n\t\t\ttrigger: \"item\",\r\n\t\t\ttextStyle:{\r\n\t\t\t\talign:'left'\r\n\t\t\t},\r\n\t\t\tformatter: (p:any) => {       \r\n\t\t\t\treturn p.data ? '省份：' + [p.data.name] + `${target ? '<br/>现存确诊：' :  '<br/>累计确诊：'}` + [p.data.value] \r\n\t\t\t\t\t\t\t\t\t:  [p.name]\r\n\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: [\r\n\t\t\t{\r\n\t\t\t\ttype: 'map',\r\n\t\t\t\tmap: \"china\",\r\n\t\t\t\tdata: confirmRef.current,\r\n\t\t\t\tlabel: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\tcolor: \"black\",\r\n\t\t\t\t\tfontStyle: 10,\r\n\t\t\t\t\talign: \"left\",\r\n\t\t\t\t},\r\n\t\t\t\tzoom: 1.2, // 当前缩放比例\r\n\t\t\t\troam: true, // 是否支持拖拽\r\n\t\t\t\titemStyle: {\r\n\t\t\t\t\tborderColor: '#ccc', // 区域边框线\r\n\t\t\t\t\tborderWidth: 1\r\n\t\t\t\t},\r\n\t\t\t\temphasis: { // 高亮显示\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tcolor: \"black\",\r\n\t\t\t\t\t\tfontSize: 10\r\n\t\t\t\t\t},\r\n\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\tareaColor: \"lightyellow\" // 区域高亮颜色\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t],\r\n\t\t\tvisualMap: {\r\n\t\t\t\ttype: \"piecewise\",\r\n\t\t\t\tshow: true,\r\n\t\t\t\tpieces: [\r\n\t\t\t\t\t{ min: 10000 },\r\n\t\t\t\t\t{ min: 1000, max: 9999 },\r\n\t\t\t\t\t{ min: 500, max: 999 },\r\n\t\t\t\t\t{ min: 100, max: 499 },\r\n\t\t\t\t\t{ min: 10, max: 99 },\r\n\t\t\t\t\t{ min: 1, max: 9 },\r\n\t\t\t\t\t{ value: 0 }\r\n\t\t\t\t],\r\n\t\t\t\tinRange: {\r\n\t\t\t\t\tcolor: [\"#e2ebf4\", \"#ffe7b2\", \"#ffcea0\", \"#ffa577\", \"#ff6341\", \"#ff2736\", \"#de1f05\"]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tchartInstance.setOption(option);\r\n    }\r\n\r\n    // 切换地图（现存确诊，累计确诊）\r\n    const handleMapChange = (e:any) => {\r\n        setIsNow(e.target.value)\r\n        confirmRef.current = e.target.value ? nowData : totalData \r\n        initChart(e.target.value)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <RadioGroupStyle value={isNow} onChange={handleMapChange}>\r\n            <RadioButtonStyle value={true}>现存确诊</RadioButtonStyle>\r\n            <RadioButtonStyle value={false}>累计确诊</RadioButtonStyle>\r\n        </RadioGroupStyle>\r\n        <div style={{width:800,height:800}} ref={chinaMapRef} />\r\n      </div>\r\n    )    \r\n}\r\nexport default ChinaMap\r\n\r\n","// 封装get请求\r\nexport const httpGet = async(url:string) => {\r\n    let result = await fetch(url)\r\n    return result.json()\r\n}\r\n// 封装post请求\r\nexport const httpPost = async (url:string, data:object) => {\r\n    let result = await fetch(url,{\r\n        method:'post',\r\n        headers:{\r\n            'Content-Type':'application/x-www-form-urlencoded; charset=UTF-8'/* 请求内容类型 */\r\n        },\r\n        body: JSON.stringify(data),\r\n        mode: 'no-cors'\r\n    })\r\n    return result.json()\r\n}","import React,{ useState, useEffect } from 'react'\r\nimport { Row } from 'components/lib'\r\nimport { Table, Tag, Button, Col } from 'antd';\r\nimport styled from '@emotion/styled';\r\nimport ChinaMap from 'pages/home/chinaMap';\r\nimport { httpGet } from 'utils/http';\r\nimport { DataProps } from 'types/localCases';\r\n\r\n\r\n\r\nconst LocalCases: React.FC = () => {\r\n\r\n    const [dataSource, setDataSource] = useState<DataProps[]>([])\r\n\r\n    useEffect(() => {\r\n        getGradeCityDetailList()\r\n    }, [])\r\n\r\n    // 获取近期31省市区数据\r\n    const getGradeCityDetailList = async() => {\r\n        let url = \"https://api.inews.qq.com/newsqa/v1/query/inner/publish/modules/list?modules=statisGradeCityDetail\";\r\n        const result = await httpGet(url)\r\n        const data = result.data.statisGradeCityDetail.map((item: object, index:number) => ({ ...item, key: index }))\r\n        setDataSource(data)\r\n        console.log(result,'result') \r\n    } \r\n\r\n    const handleDetail = async (rowData:any) => {\r\n        const { province, city } = rowData\r\n        let url = `https://api.inews.qq.com/newsqa/v1/query/pubished/daily/list?province=${province}&city=${city}`\r\n        const response = await fetch(url,{\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\r\n            },\r\n        })\r\n        const result = await response.json()\r\n        console.log(result,'result');  \r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: '城市(区)',\r\n            dataIndex: 'city',\r\n        },\r\n        {\r\n            title: '省市区',\r\n            dataIndex: 'province',\r\n        },\r\n        {\r\n            title: '新增',\r\n            dataIndex: 'confirmAdd',\r\n            render: (text:number) => <>{text === 0 ? <TagStyle color=\"default\" >{text}</TagStyle> : <TagStyle color=\"red\">+{text}</TagStyle>}</>\r\n        },\r\n        {\r\n            title: '现有确诊',\r\n            dataIndex: 'nowConfirm',\r\n        },\r\n        {\r\n            title: '累计确诊',\r\n            dataIndex: 'confirm',\r\n        },\r\n        {\r\n            title: '治愈',\r\n            dataIndex: 'heal',\r\n        },\r\n        {\r\n            title: '死亡',\r\n            dataIndex: 'dead',\r\n        },\r\n        {\r\n            title: '区域风险',\r\n            dataIndex: 'grade',\r\n        },\r\n        {\r\n            title:'详情',\r\n            dataIndex: \"operation\",\r\n            render: (text:any, rowData:object)=><><Button onClick={()=>handleDetail(rowData)}>详情</Button></>\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <Row between={true} gap={2} marginBottom={1}>\r\n                <Col>\r\n                    近期31省市区本土病例\r\n                     <a style={{marginLeft:'20px'}} href='https://api.inews.qq.com/newsqa/v1/query/inner/publish/modules/list?modules=statisGradeCityDetail'>\r\n                        数据来源:https://api.inews.qq.com/\r\n                    </a>\r\n                </Col>\r\n\r\n                <Col>\r\n                    <a href='https://mock.yonyoucloud.com/mock/22022/COVID-19/getOnsInfo/list'>\r\n                        数据来源:https://mock.yonyoucloud.com/mock/22022/COVID-19/getOnsInfo/list\r\n                    </a>\r\n                </Col>\r\n            </Row>\r\n            <Row between={true} gap={2} marginBottom={1}>\r\n                <Col>\r\n                    <Table \r\n                        columns={columns} \r\n                        dataSource={dataSource.sort((a,b) => b.confirmAdd - a.confirmAdd)}      \r\n                    />\r\n                </Col>\r\n                <Col>\r\n                    <ChinaMap />\r\n                </Col>\r\n           </Row>\r\n        </>\r\n    )\r\n}\r\nexport default LocalCases\r\n\r\nconst TagStyle = styled(Tag)`\r\n    border: none;\r\n    background-color: none;\r\n    background: none;\r\n    font-size: 16px;\r\n`\r\n","/* 全国数据趋势折线图 */\r\nimport React, { useEffect, useState } from 'react'\r\nimport * as echarts from 'echarts';\r\nimport { addTrendProps, natalityProps, nowTrendProps, totalTrendProps } from 'types/chinaTrend';\r\nimport { RadioButtonStyle, RadioGroupStyle } from '../addConfirmTrend';\r\nimport { confirmConfig, deadConfig, healConfig, legendData, nowConfirmConfig, suspectConfig, totalConfirmConfig } from 'components/lib';\r\n\r\ntype Props = {\r\n    nowTrend: nowTrendProps[] ;\r\n    addTrend: addTrendProps[] ;\r\n    totalTrend: totalTrendProps[] ;\r\n    natality: natalityProps[] ;\r\n};\r\n\r\n const ChinaTrend: React.FC<Props> = ({nowTrend, addTrend, totalTrend, natality}) => {\r\n\r\n    const [trendType, setTrendType] = useState(0) // 疫情趋势类型 0：全国现有确诊趋势，1：全国疫情新增趋势，2：全国疫情累计趋势，3：治愈率，病死率\r\n\r\n    let chartInstance:any\r\n    \r\n    let initChart = (trg?:any) => {\r\n      chartInstance = echarts.init(document.getElementById('chinaTrend') as HTMLDivElement); // 图表实例\r\n        let option: any = {\r\n            title: {\r\n                text: trg === 0 ? '全国现有确诊趋势' : '全国疫情新增趋势'\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis',\r\n                formatter: trg === 3 ?'{b0}<br/>{a0}: {c0}%<br />{a1}: {c1}%<br />' : '',\r\n                textStyle:{\r\n                    align:'left'\r\n                }\r\n            },\r\n            legend: {\r\n                data: trg === 0 ? [{ name: '现有确诊', ...legendData}] :\r\n                      trg === 1 ? [{ name: '新增确诊', ...legendData}, { name: '新增疑似', ...legendData}] : \r\n                      trg === 2 ? [{ name: '累计确诊', ...legendData}, { name: '累计治愈', ...legendData}, { name: '累计死亡', ...legendData}] : \r\n                      trg === 3 ? [{ name: '治愈率', ...legendData}, { name: '病死率', ...legendData}] : []\r\n            },\r\n            grid: {\r\n                left: '7%',\r\n                right: '3%',\r\n                bottom: '3%',\r\n            },\r\n            toolbox: {\r\n                feature: {\r\n                    saveAsImage: {}\r\n                }\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                boundaryGap: false,\r\n                data: nowTrend.map((item:any)=>item.date.replace(/[.]/g, '-'))\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: trg === 0 ? [\r\n                    {\r\n                        name: '现有确诊',\r\n                        type: 'line',\r\n                        data: nowTrend.map((item:any)=>item.nowConfirm),\r\n                        ...nowConfirmConfig\r\n                    },\r\n                ] : trg === 1 ? [\r\n                    {\r\n                        name: '新增确诊',\r\n                        type: 'line',\r\n                        data: addTrend.map((item:any)=>item.confirm),\r\n                        ...confirmConfig\r\n                    },\r\n                    {\r\n                        name: '新增疑似',\r\n                        type: 'line',\r\n                        data: addTrend.map((item:any)=>item.suspect),\r\n                        ...suspectConfig\r\n                    },                    \r\n                ] : trg === 2 ? [\r\n                    {\r\n                        name: '累计确诊',\r\n                        type: 'line',\r\n                        data: totalTrend.map((item:any)=>item.confirm),\r\n                        ...totalConfirmConfig\r\n                    },\r\n                    {\r\n                        name: '累计治愈',\r\n                        type: 'line',\r\n                        data: totalTrend.map((item:any)=>item.heal),\r\n                        ...healConfig\r\n                    },\r\n                    {\r\n                        name: '累计死亡',\r\n                        type: 'line',\r\n                        data: totalTrend.map((item:any)=>item.dead),\r\n                        ...deadConfig\r\n                    },\r\n                ] : trg === 3 ? [\r\n                    {\r\n                        name: '治愈率',\r\n                        type: 'line',\r\n                        data: natality.map((item:any)=>item.healRate),\r\n                        ...healConfig\r\n                    },\r\n                    {\r\n                        name: '病死率',\r\n                        type: 'line',\r\n                        data: natality.map((item:any)=>item.deadRate),\r\n                        ...deadConfig\r\n                    },\r\n                ] : []\r\n        };\r\n        chartInstance.setOption(option);\r\n    };\r\n    \r\n    useEffect(() => {\r\n        initChart(trendType);\r\n        return ()=>{\r\n          chartInstance.dispose() // 初次渲染时清除图表实例\r\n        }\r\n    });\r\n\r\n    // 切换折线图数据\r\n    const handleLineChange = (e:any) => {\r\n        chartInstance.dispose() // 切换时清除上次图表实例\r\n        setTrendType(e.target.value) \r\n        initChart(e.target.value)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <RadioGroupStyle buttonStyle={'solid'} value={trendType} onChange={handleLineChange}>\r\n                <RadioButtonStyle value={0}>全国现有确诊趋势</RadioButtonStyle>\r\n                <RadioButtonStyle value={1}>全国疫情新增趋势</RadioButtonStyle>\r\n                <RadioButtonStyle value={2}>全国疫情累计趋势</RadioButtonStyle>\r\n                <RadioButtonStyle value={3}>治愈率、病死率</RadioButtonStyle>\r\n            </RadioGroupStyle>\r\n            <div id={'chinaTrend'} style={{width:780,height:600}}/>\r\n        </div>\r\n    )\r\n}\r\nexport default ChinaTrend\r\n","import React, {useState, useEffect, createContext} from \"react\";\r\nimport CardInfo from \"pages/home/cardInfo\";\r\nimport LocalCases from \"pages/home/localCases\"\r\nimport { Col} from \"antd\";\r\nimport { httpGet, httpPost } from \"utils/http\";\r\nimport AddConfirm from \"./addConfirmTrend\";\r\nimport ChinaTrend from \"./chinaTrend\";\r\nimport { Row, ScreenContainer } from 'components/lib'\r\nimport { PreDayProps, TotalProps } from \"types/cardInfo\";\r\nimport { localConfirmAddProps, localConfirmProps } from \"types/addConfirmTrend\";\r\nimport { addTrendProps, natalityProps, nowTrendProps, totalTrendProps } from \"types/chinaTrend\";\r\nimport { nowDataProps } from \"types/chinaMap\";\r\n\r\n\r\n/* ChinaMap组件使用 */\r\nexport const NowContext = createContext({})  // 各省份（直辖市）现存确诊人数数据\r\nexport const TotalContext = createContext({}) // 各省份（直辖市）累计确诊人数数据\r\n// export const TotalContext = createContext({}) // 各省份（直辖市）累计确诊人数数据\r\n\r\nconst Home : React.FC =  () => {\r\n    const [chinaAdd, setChinaAdd] = useState<Partial<PreDayProps>>({})  // 较昨日新增数据\r\n    const [chinaTotal, setChinaTotal] = useState<Partial<TotalProps>>({}) // 累计数据\r\n\r\n    const [nowData, setNowData] = useState({}) // 各省份现存确诊\r\n    const [totalData, setTotalData] = useState({}) // 各省份累计确诊\r\n\r\n    const [localConfirmAdd, setLocalConfirmAdd] = useState([]) // 本土新增数据趋势\r\n    const [localConfirm, setLocalConfirm] = useState([]) // 本土累计数据趋势\r\n\r\n    const [nowTrend, setNowTrend] = useState([]) // 全国现有确诊趋势\r\n    const [addTrend, setAddTrend] = useState([]) // 全国疫情新增趋势\r\n    const [totalTrend, setTotalTrend] = useState([]) // 全国疫情累计趋势\r\n    const [natality, setNatality] = useState([]) // 治愈率，病死率\r\n\r\n\r\n    useEffect(() => {\r\n        getList()\r\n        getOnsInfo()\r\n    }, [])\r\n\r\n    const getList = async () => {\r\n        let url = 'https://api.inews.qq.com/newsqa/v1/query/inner/publish/modules/list?modules=chinaDayList,chinaDayAddList,nowConfirmStatis,provinceCompare';\r\n        const result = await httpGet(url) // 获取接口中的json数据   \r\n        const chinaAdd = (result.data.chinaDayAddList[result.data.chinaDayAddList.length- 1]) // 获取 chinaDayAddList 中最后一条数据\r\n        setChinaTotal(result.data.chinaDayList[result.data.chinaDayAddList.length- 1])  // 获取 chinaDayList 中最后一条数据\r\n        const data = result.data.chinaDayList.map((item:any)=>({confirm:item.confirm,nowConfirm: item.nowConfirm})).slice(-2) // map遍历数组，只包含 confirm 和 nowConfirm 两个属性\r\n        chinaAdd.confirm = data[1].confirm - data[0].confirm\r\n        chinaAdd.nowConfirm = data[1].nowConfirm - data[0].nowConfirm\r\n        setChinaAdd(chinaAdd)\r\n        \r\n        // 本土新增数据趋势数据\r\n        const localConfirmAdd = result.data.chinaDayAddList.map((item:localConfirmAddProps)=>({localConfirmadd:item.localConfirmadd, date:item.date}))\r\n        setLocalConfirmAdd(localConfirmAdd)\r\n\r\n        // 本土累计数据趋势数据\r\n        const localConfirm = result.data.chinaDayList.map((item:localConfirmProps)=>({localConfirm:item.localConfirm, date:item.date}))\r\n        setLocalConfirm(localConfirm)   \r\n        \r\n        // 全国现有确诊趋势\r\n        const nowTrend = result.data.chinaDayList.map((item: nowTrendProps)=>({nowConfirm: item.nowConfirm, date:item.date}))\r\n        setNowTrend(nowTrend)\r\n\r\n        // 全国疫情新增趋势\r\n        const addTrend = result.data.chinaDayAddList.map((item:addTrendProps)=>({confirm: item.confirm, suspect: item.suspect, date: item.date}))\r\n        setAddTrend(addTrend)\r\n        \r\n        // 全国疫情累计趋势\r\n        const totalTrend = result.data.chinaDayList.map((item:totalTrendProps)=>({confirm: item.confirm, heal: item.heal, dead: item.dead, date: item.date}))\r\n        setTotalTrend(totalTrend)\r\n\r\n        // 治愈率，病死率\r\n        const natality = result.data.chinaDayList.map((item:natalityProps)=>({healRate: item.healRate, deadRate: item.deadRate, date: item.date}))\r\n        setNatality(natality)\r\n        \r\n    }\r\n\r\n    // 获取疫情信息数据\r\n    const getOnsInfo = async () => {\r\n        const result = await fetch('https://mock.yonyoucloud.com/mock/22022/COVID-19/getOnsInfo/list')\r\n        const data = await result.json()   \r\n        const listData = data.data.areaTree[0].children.map((item:nowDataProps)=>({name:item.name, value: item.total.nowConfirm})) // 获取现有确诊人数数据\r\n        const totalList = data.data.areaTree[0].children.map((item:nowDataProps)=>({name:item.name, value: item.total.confirm}))  // 获取累计确诊人数数据\r\n        \r\n        setNowData(listData)\r\n        setTotalData(totalList)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <ScreenContainer>\r\n                <CardInfo chinaAdd={chinaAdd} chinaTotal={chinaTotal} />\r\n            </ScreenContainer>\r\n\r\n            <ScreenContainer marginTop={2}>\r\n                <NowContext.Provider value={nowData}>\r\n                    <TotalContext.Provider value={totalData} >\r\n                        <LocalCases />\r\n                    </TotalContext.Provider>\r\n                </NowContext.Provider>\r\n            </ScreenContainer>\r\n            \r\n            <ScreenContainer marginTop={2}>\r\n                <Row between={true} gap={2} marginBottom={2}>\r\n                    <Col>\r\n                        <AddConfirm localConfirmAdd={localConfirmAdd} localConfirm={localConfirm} />\r\n                    </Col>\r\n                    <Col>\r\n                        <ChinaTrend nowTrend={nowTrend} addTrend={addTrend} totalTrend={totalTrend} natality={natality} />\r\n                    </Col>\r\n                </Row>\r\n            </ScreenContainer>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Home\r\n\r\n\r\n","import React,{ useState, useRef} from \"react\";\r\nimport { useLocation, Outlet, Route } from \"react-router-dom\";\r\nimport CostomSider from \"components/costomSider\";\r\nimport { Layout } from 'antd';\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from '@ant-design/icons';\r\nimport styled from \"@emotion/styled\";\r\nimport Home from \"pages/home\";\r\n\r\nconst { Header, Sider, Content, Footer } = Layout;\r\n\r\nconst Main: React.FC = (props) => {\r\n\r\n    const [collapsed, setCollapsed] = useState(false)\r\n    const siderRef = useRef(null)\r\n\r\n    const location = useLocation()\r\n\r\n    const toggle  = () => {\r\n        setCollapsed(!collapsed)\r\n    }\r\n     \r\n    return (\r\n        <>\r\n            <Layout>\r\n                <SiderStyle ref={siderRef} trigger={null} collapsible collapsed={collapsed}>\r\n                    <CostomSider collapsed={collapsed} />\r\n                </SiderStyle>\r\n                <Layout style={{backgroundColor:'#fff'}}>\r\n                    <HeaderStyle onClick={toggle} >\r\n                        {\r\n                            collapsed ? <SpanStyle><MenuUnfoldOutlined /></SpanStyle> : <SpanStyle><MenuFoldOutlined /></SpanStyle>\r\n                        }\r\n                        <span style={{paddingLeft:'40%'}}>疫情数据展示</span>\r\n                    </HeaderStyle>\r\n                    <Content style={{padding: 24,minHeight: 280,}}>\r\n                        {\r\n                            location.pathname === '/' ? <Route path='/main/home' element={<Home/>} /> : <Outlet />    \r\n                        }  \r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center' }}>COVID-19 ©talktao</Footer>\r\n                </Layout>\r\n            </Layout>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n\r\nconst SpanStyle = styled.span`\r\n    font-size: 32px;\r\n    line-height: 64px;\r\n    cursor: pointer;\r\n    transition: color 0.3s;\r\n`\r\nconst HeaderStyle = styled(Header)`\r\n    padding-left: 10px;\r\n    background-color: #fff;\r\n    text-align: left;\r\n`\r\nconst SiderStyle = styled(Sider)`\r\n    background: #b0e0e6;\r\n`","import React, { FC } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport Main from 'layout/main';\nimport Home from 'pages/home';\n\nconst App: FC = () => (\n  <div className=\"App\">\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Main/>} />\n        <Route path=\"main/*\" element={<Main/>}>\n          <Route path=\"home\" element={<Home/>} />\n        </Route>\n      </Routes>\n    </Router>   \n  </div>\n);\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.less'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}